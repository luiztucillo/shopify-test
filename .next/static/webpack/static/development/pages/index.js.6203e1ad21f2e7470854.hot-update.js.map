{"version":3,"file":"static/webpack/static/development/pages/index.js.6203e1ad21f2e7470854.hot-update.js","sources":["webpack:///./components/ResourceList.js"],"sourcesContent":["import gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport {\n    Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    Thumbnail\n} from \"@shopify/polaris\";\nimport store from \"store-js\";\n\nconst GET_PRODUCTS_BY_ID = gql`\n    query getProducts($ids: [ID!]!) {\n        nodes(ids: $ids) {\n            ... on Product {\n                title\n                handle\n                descriptionHtml\n                id\n                images(first: 1) {\n                    edges {\n                        node {\n                            originalSrc\n                            altText\n                        }\n                    }\n                }\n                variants(first: 1) {\n                    edges {\n                        node {\n                            price\n                            id\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n    render() {\n        const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n        return (\n            <Query\n                query={GET_PRODUCTS_BY_ID}\n                variables={{ ids: store.get(\"ids\") }}\n            >\n                {({ data, loading, error }) => {\n                    if (loading) return <div>Loadingâ€¦</div>;\n                    if (error) return <div>{error.message}</div>;\n                    console.log(data);\n                    return (\n                        <Card>\n                            <ResourceList\n                showHeader\n                resourceName={{ singular: 'Product', plural: 'Products' }}\n                items={data.nodes}\n                renderItem={item => {\n                  const media = (\n                    <Thumbnail\n                      source={\n                        item.images.edges[0]\n                          ? item.images.edges[0].node.originalSrc\n                          : ''\n                      }\n                      alt={\n                        item.images.edges[0]\n                          ? item.images.edges[0].node.altText\n                          : ''\n                      }\n                    />\n                  );\n                  const price = item.variants.edges[0].node.price;\n                  return (\n                    <ResourceList.Item\n                      id={item.id}\n                      media={media}\n                      accessibilityLabel={`View details for ${item.title}`}\n                    >\n                      <Stack>\n                        <Stack.Item fill>\n                          <h3>\n                            <TextStyle variation=\"strong\">\n                              {item.title}\n                            </TextStyle>\n                          </h3>\n                        </Stack.Item>\n                        <Stack.Item>\n                          <p>${price}</p>\n                        </Stack.Item>\n                        <Stack.Item>\n                          <p>Expires on {twoWeeksFromNow} </p>\n                        </Stack.Item>\n                      </Stack>\n                    </ResourceList.Item>\n                  );\n                }}\n              />\n                        </Card>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default ResourceListWithProducts;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AAEA;AACA;AA4BA;;;;;;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAKA;AANA;AACA;AAYA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAAA;AAEA;AAAA;AAcA;AA3CA;AA+CA;AAGA;;;;AAhEA;AACA;AAkEA;;;;A","sourceRoot":""}